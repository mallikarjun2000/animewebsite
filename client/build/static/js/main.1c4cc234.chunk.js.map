{"version":3,"sources":["assets/giphy.webp","assets/placeholder-img.jpg","Components/Home.js","Components/Nav.js","Components/SingleListItem.js","Components/TopAnime.js","Components/Gener.js","Components/LandingPage.js","Components/SearchResultsPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","handleSearch","event","setState","search_text","target","value","state","show","url","this","className","onChange","style","marginTop","width","marginLeft","height","placeholder","to","React","Component","Nav","href","class","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","SingleListItem","anime_data","props","singleanime","title","img_url","image_url","start_date","episodes","mal_id","src","alt","TopAnime","webdata","axios","get","then","res","console","log","data","top","catch","err","alert","Loading","map","SINGLEANIME","key","Gener","LandingPage","base_url","malid","match","params","rating","status","synopsis","aired","duration","trailer_url","iframe","SearchResultPages","results","text","backgroundColor","color","fontSize","single_Anime","slice","App","path","exact","component","SearchResults","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.1c4cc234.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/giphy.da7482ba.webp\";","module.exports = __webpack_public_path__ + \"static/media/placeholder-img.15175427.jpg\";","import React from 'react';\r\nimport '../Components/home.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Home extends React.Component{\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            show : false,\r\n            search_text : null\r\n        }\r\n    }\r\n\r\n    handleSearch=(event)=>{\r\n        this.setState({search_text : event.target.value });\r\n    }\r\n\r\n    render(){\r\n\r\n        const url = '/searchresults/'+this.state.search_text;\r\n        return(\r\n            <div className=\"home-main-div\">\r\n                <div className=\"home-title\">Anime Buzz</div>\r\n                <div className=\"home-description\"> Now All your Favourate anime in one website . </div>\r\n                <input className=\"home-seach-input\" \r\n                onChange={this.handleSearch}\r\n                value={this.state.search_text}\r\n                style={{marginTop:\"100px\",\r\n                        width:\"70%\",\r\n                        marginLeft:\"0px\",\r\n                        height:\"40px\"}}\r\n                        placeholder=\" search your anime\" />\r\n                <Link to={url}>\r\n                <button className=\"btn btn-primary\"\r\n                style={{\r\n                    marginTop:\"-6px\",\r\n                    marginLeft:\"10px\"\r\n                }}>Search</button>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './nav.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Nav extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <Link to='/'>\r\n            <a className=\"nav-home\"  href=\"#\" >Anime Buzz</a>\r\n            </Link>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul class=\"navbar-nav\">\r\n                <li class=\"nav-item\">\r\n                <Link to='/newanime'>\r\n                <a class=\"nav-link nav-new-anime\" href=\"#\" >Gener</a>\r\n                </Link>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                <Link to='/topanime' >\r\n                <a class=\"nav-link nav-top \"  href=\"#\">New Upcoming Anime</a>\r\n                </Link>\r\n                </li>\r\n                </ul>\r\n            </div>\r\n            </nav>\r\n        )\r\n    }\r\n    /*\r\n    <nav class=\"nav navbar-expand-lg bg-dark\">\r\n            <a class=\"nav-home\" href=\"#\">Anime Buzz</a>\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <a class=\"nav-link nav-top active\" href=\"#\">Top Aime</a>\r\n                <a class=\"nav-link nav-new-anime \" href=\"#\">New upcomming Anime</a>\r\n            </div>\r\n            </nav>\r\n    */\r\n\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport './singlelistitem.css';\r\n//import PlaceHolder from '../assets/placeholder-img.jpg';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass SingleListItem extends React.Component{\r\n\r\n\r\n    render(){\r\n\r\n        const anime_data = this.props.singleanime;\r\n        const title = anime_data.title;\r\n        const img_url = anime_data.image_url;\r\n        const episodes = anime_data.episodes;\r\n        var start_date = anime_data.start_date;\r\n        const mal_id = anime_data.mal_id;\r\n        \r\n        if(start_date == null)\r\n        start_date = \"Not available\"\r\n\r\n        var airing=false,disply;\r\n        if(airing)\r\n            disply = \"Airing\"\r\n        else\r\n            disply= \"Not Airing\"\r\n\r\n        const url = '/landingpage/'+anime_data.mal_id;\r\n        return(\r\n            \r\n            <div className=\"card single-card\">\r\n                <Link to={url}>\r\n                <div className=\"single-div-img\">\r\n                    <img className=\"single-img\" src={img_url} alt=\"..\"/>\r\n                </div>\r\n                </Link>\r\n                <div className=\"single-anime-name\">{title}</div>\r\n                <div className=\"single-anime-year\">{start_date}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SingleListItem;","import React from 'react';\r\nimport axios from 'axios';\r\nimport SingleAnime from './SingleListItem';\r\nimport './topanime.css';\r\nimport Loading from '../assets/giphy.webp';\r\n\r\nclass TopAnime extends React.Component {\r\n\r\n    componentDidMount(){\r\n        const url = 'https://api.jikan.moe/v3/top/anime/1/upcoming';\r\n        axios.get(url)\r\n        .then(res=>{console.log(res);\r\n                    this.setState({webdata : res.data.top});\r\n        })\r\n        .catch(err=>{alert('error' , err)});\r\n    }\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            webdata : null\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.webdata==null)\r\n        {\r\n            return(\r\n            <div>\r\n                <img src={Loading}/> \r\n            </div>\r\n            )\r\n        }\r\n        return(\r\n            <div className=\"top-main-main\">\r\n            <div className=\"top-title\">New Anime List</div>\r\n            <div className=\"top-main-div\">\r\n                {\r\n                    this.state.webdata.map(SINGLEANIME=>{\r\n                        return <SingleAnime key={SINGLEANIME.mal_id} singleanime={SINGLEANIME} />\r\n                    })\r\n                }\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TopAnime;","import React ,{ Component } from 'react';\r\n\r\nclass Gener extends Component{\r\n\r\n    render() {\r\n        return (\r\n             <div style={{marginTop:\"100px\"}}>\r\n                 Top Anime of All Time . \r\n             </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Gener;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Loading from '../assets/giphy.webp';\r\nimport Placeholder from '../assets/placeholder-img.jpg';\r\nimport './landingpage.css';\r\n\r\nclass LandingPage extends React.Component{\r\n\r\n    componentDidMount(){\r\n        const { malid } = this.props.match.params;\r\n        const url = this.state.base_url+malid;\r\n        console.log(url);\r\n        axios.get(url)\r\n        .then(res=>{console.log(res);\r\n            this.setState({anime_data:res.data})})\r\n            .catch(err=>{alert('An error has occured check or reload browser')});\r\n    }\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            base_url : 'https://api.jikan.moe/v3/anime/',\r\n            anime_data:null\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.anime_data == null)\r\n        {\r\n            return(\r\n                <div>\r\n                    <img src={Loading} />\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            const anime_data = this.state.anime_data;\r\n            const img_url = anime_data.image_url;\r\n            const title = anime_data.title;\r\n            const rating = anime_data.rating;\r\n            const type = anime_data.type;\r\n            const episodes = anime_data.episodes;\r\n            const status = anime_data.status;\r\n            const aired_details = anime_data.aired;\r\n            const duration = anime_data.duration;\r\n            const synopsis = anime_data.synopsis;\r\n            const trailer_url = anime_data.trailer_url;\r\n\r\n        return(\r\n            <div className=\"landing-main-div\">\r\n                <div className=\"landing-header\">\r\n                    <div className=\"landing-header-left\">\r\n                        <img className=\"landing-image\" src={img_url} />\r\n                    </div>\r\n                    <div className=\"landing-header-right\">\r\n                        <h2>{title}</h2>\r\n                        <p>Rating : {rating}</p>\r\n                        <p>Episodes : {episodes}</p>\r\n                        <p>status : {status}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"landing-body\">\r\n                <hr></hr>\r\n                    <div>Synopsis : </div>\r\n                        <div> {synopsis} </div>\r\n                    <div className=\"landing-gener-div\">\r\n                        Gener : Geners yet to come\r\n                        {}\r\n                    </div>\r\n                    <p><b>Watch Trailer Here !</b></p>\r\n                    <iframe className=\"landing-trailer\" iframe src={trailer_url} width=\"400px\" height=\"250px\">\r\n                    </iframe>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n}\r\n\r\nexport default LandingPage;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Loading from '../assets/giphy.webp';\r\nimport SingleListItem from './SingleListItem';\r\nimport './topanime.css';\r\n\r\n\r\nclass SearchResultPages extends React.Component{\r\n\r\n    componentDidMount(){\r\n        const { text } = this.props.match.params;\r\n        axios.get(`https://api.jikan.moe/v3/search/anime?q=${text}`)\r\n        .then(res=>{\r\n            this.setState({results : res.data.results})\r\n            console.log(' results : ',res.data);\r\n        })\r\n    }\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            results : null\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.results!=null)\r\n        {\r\n            return(\r\n                <div>\r\n                <div style={{backgroundColor:\"#1D1D1D\",color:\"white\",fontSize:\"150%\"}}>Results</div>\r\n                <div className='top-main-div'>\r\n                    {this.state.results.map(single_Anime=>{\r\n                        if(single_Anime.start_date!=null)\r\n                        single_Anime.start_date = single_Anime.start_date.slice(0,4);\r\n                        else\r\n                        single_Anime.start_date = \"Not Available\";\r\n                        return <SingleListItem singleanime={single_Anime}/>\r\n                    }\r\n                    )}\r\n                </div>\r\n                </div>\r\n            )\r\n        }\r\n        else\r\n        {\r\n            return(\r\n                    <div>\r\n                        <img src={Loading}/> \r\n                    </div>\r\n                )\r\n        }\r\n    }\r\n}\r\n\r\nexport default SearchResultPages;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Home from  './Components/Home';\nimport NavComponent from './Components/Nav';\nimport TopAnime from './Components/TopAnime';\nimport Gener from './Components/Gener';\nimport LandingPage from './Components/LandingPage';\nimport SearchResults from './Components/SearchResultsPage';\nimport { BrowserRouter as Router , Switch , Route } from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <Router>\n    <NavComponent/>\n    <div className=\"App\">\n        <Switch>\n            <Route path='/' exact component={Home}/>\n            <Route path='/topanime' exact component={TopAnime}/>\n            <Route path='/landingpage/:malid' exact component={LandingPage} />\n            <Route path='/newanime' exact component={Gener} />\n            <Route path='/searchresults/:text' exact component={SearchResults} />\n        </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}